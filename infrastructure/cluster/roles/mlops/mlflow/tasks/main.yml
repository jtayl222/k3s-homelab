---
- name: Create MLflow namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ mlflow_namespace }}"
  tags: [mlflow, mlops, namespace]

- name: Apply MLflow S3 Sealed Secret
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    src: "{{ playbook_dir }}/../manifests/sealed-secrets/mlflow-s3-secret.yaml"
    state: present
  tags: [mlflow, mlops, sealed-secrets]

- name: Create MLflow PVC
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ lookup('template', 'pvc.yaml.j2') | from_yaml }}"
  tags: [mlflow, mlops, storage]

- name: Ensure MLflow MinIO credentials exist
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    src: "{{ playbook_dir }}/../manifests/sealed-secrets/minio-secret-mlflow.yaml"
    state: present
  register: mlflow_secret_result
  retries: 3
  delay: 10
  tags: [mlops, mlflow, credentials]

- name: Verify MLflow secret is available
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: v1
    kind: Secret
    name: minio-secret-mlflow
    namespace: mlflow
  register: mlflow_secret_check
  until: mlflow_secret_check.resources | length > 0
  retries: 5
  delay: 10
  tags: [mlops, mlflow, verify-credentials]

- name: Deploy MLflow
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ lookup('template', 'deployment.yaml.j2') | from_yaml }}"
  tags: [mlflow, mlops, deployment]

- name: Create MLflow Service
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ lookup('template', 'service.yaml.j2') | from_yaml }}"
  tags: [mlflow, mlops, service]