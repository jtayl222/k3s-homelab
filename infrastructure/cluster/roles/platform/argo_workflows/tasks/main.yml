---
- name: Add Argo Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm
    kubeconfig: "{{ kubeconfig_path }}"
  retries: 3
  delay: 10
  tags: [platform, helm-repos]

- name: Ensure Argo Workflows namespace exists
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    name: "{{ argowf_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  tags: [platform, workflows, namespace]

- name: Ensure Argo Workflows MinIO credentials sealed secret is applied
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    src: "{{ playbook_dir }}/../manifests/sealed-secrets/minio-credentials-wf.yaml" # This secret is for workflows to use MinIO
    state: present
    namespace: "{{ argowf_namespace }}" # Explicitly state namespace, though manifest should have it
  register: argowf_minio_secret_result
  retries: 3
  delay: 10
  tags: [platform, workflows, credentials]

- name: Verify Argo Workflows MinIO credentials secret is available
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: v1
    kind: Secret
    name: minio-credentials-wf # Verifying the secret for workflows
    namespace: "{{ argowf_namespace }}"
  register: argowf_minio_secret_check
  until: argowf_minio_secret_check.resources | length > 0
  retries: 12 # Increased retries for secret to be unsealed
  delay: 10
  tags: [platform, workflows, verify-credentials]

- name: Deploy Argo Workflows {{ argowf_app_version }}
  community.kubernetes.helm:
    name: "{{ argowf_name }}"
    chart_ref: "{{ argowf_chart_ref }}"
    chart_version: "{{ argowf_chart_version }}"
    release_namespace: "{{ argowf_namespace }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_path }}"
    wait: true
    wait_timeout: "{{ helm_wait_timeout }}"
    values:
      server:
        authModes: "{{ argowf_auth_modes }}"
        serviceType: "{{ argowf_service_type }}"
        serviceNodePort: "{{ argowf_service_nodeport }}"
        extraArgs:
          - --auth-mode=server
        secure: false
        rbac:
          create: true
        image:
          tag: "{{ argowf_app_version }}"
      controller:
        workflowNamespaces: "{{ argowf_workflow_namespaces }}"
        resources:
          requests:
            memory: "{{ argowf_memory_request }}"
            cpu: "{{ argowf_cpu_request }}"
          limits:
            memory: "{{ argowf_memory_limit }}"
            cpu: "{{ argowf_cpu_limit }}"
        image:
          tag: "{{ argowf_app_version }}"
      executor:
        image:
          tag: "{{ argowf_app_version }}"
  register: argowf_deployment
  retries: "{{ helm_retries }}"
  delay: "{{ helm_retry_delay }}"
  tags: [platform, workflows, helm-deploy]

- name: Wait for Argo Workflows server to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ argowf_name }}-server" # Default server deployment name
    namespace: "{{ argowf_namespace }}"
  register: server_deployment_status
  until: "server_deployment_status.resources is defined and server_deployment_status.resources | length > 0 and server_deployment_status.resources[0].status.availableReplicas is defined and server_deployment_status.resources[0].status.availableReplicas >= 1 and server_deployment_status.resources[0].status.updatedReplicas == server_deployment_status.resources[0].status.replicas"
  retries: 30 # ~5 minutes
  delay: 10
  tags: [platform, workflows, verify]

- name: Display Argo Workflows deployment status
  debug:
    msg:
      - "🎉 Argo Workflows {{ argowf_app_version }} deployment completed successfully!"
      - "🌐 Workflows UI: http://{{ ansible_host | default('192.168.1.85') }}:{{ argowf_service_nodeport }}"
      - "📁 Namespace: {{ argowf_namespace }}"
  tags: [platform, summary]